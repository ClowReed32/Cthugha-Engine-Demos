
struct VsIn 
{
	float3 vertexPosition_modelspace : Position;
};

struct PsIn 
{
	float4 vertexPosition_projectspace : SV_Position;
	float4 vertexPosition_viewSpace	   : TexCoord0;
};

[Vertex shader]

float4x4 View;
float4x4 Projection;
float4x4 World;

PsIn main(VsIn In)
{
	PsIn output;
	
	float4 vertexPosition_worldspace = mul(float4(In.vertexPosition_modelspace, 1.0f), World);
	output.vertexPosition_viewSpace = mul(vertexPosition_worldspace, View);
	float4 worldViewProjPosition = mul(output.vertexPosition_viewSpace, Projection);
	output.vertexPosition_projectspace = worldViewProjPosition;
	
	return output;
}

[Fragment shader]

float main(PsIn In) : SV_Target0
{
	float fragmentDepth  = length(In.vertexPosition_viewSpace.xyz);
	
	return fragmentDepth;
}