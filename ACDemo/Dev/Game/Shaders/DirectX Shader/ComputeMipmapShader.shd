[Compute shader]

int cubeMapDirection;
int srcMipLevel;

RWTexture3D<float4> dstMip;
Texture3D srcTex;

[numthreads(16, 8, 1)]

void main( uint3 Gid : SV_GroupID, uint3 DTid : SV_DispatchThreadID, uint3 GTid : SV_GroupThreadID, uint GI : SV_GroupIndex )
{
	int3 dstPos = DTid;
	int3 srcPos = 2*dstPos;
	
	float4 srcColor0 = srcTex.Load(int4(srcPos + int3(0, 0, 0), srcMipLevel));
	float4 srcColor1 = srcTex.Load(int4(srcPos + int3(1, 0, 0), srcMipLevel));
	float4 srcColor2 = srcTex.Load(int4(srcPos + int3(0, 1, 0), srcMipLevel));
	float4 srcColor3 = srcTex.Load(int4(srcPos + int3(1, 1, 0), srcMipLevel));
	float4 srcColor4 = srcTex.Load(int4(srcPos + int3(0, 0, 1), srcMipLevel));
	float4 srcColor5 = srcTex.Load(int4(srcPos + int3(1, 0, 1), srcMipLevel));
	float4 srcColor6 = srcTex.Load(int4(srcPos + int3(0, 1, 1), srcMipLevel));
	float4 srcColor7 = srcTex.Load(int4(srcPos + int3(1, 1, 1), srcMipLevel));
	
	float4 outColor;
		
	if(cubeMapDirection == 0)
	{
		// +X
		outColor =
			srcColor0 + srcColor1 * (1.0 - srcColor0.w)
			+ srcColor2 + srcColor3 * (1.0 - srcColor2.w)
			+ srcColor4 + srcColor5 * (1.0 - srcColor4.w)
			+ srcColor6 + srcColor7 * (1.0 - srcColor6.w);
	}
	else if(cubeMapDirection == 1)
	{
		// -X
		outColor =
			srcColor1 + srcColor0 * (1.0 - srcColor1.w)
			+ srcColor3 + srcColor2 * (1.0 - srcColor3.w)
			+ srcColor5 + srcColor4 * (1.0 - srcColor5.w)
			+ srcColor7 + srcColor6 * (1.0 - srcColor7.w);
	}
	else if(cubeMapDirection == 2)
	{
		// +Y
		outColor =
			srcColor0 + srcColor2 * (1.0 - srcColor0.w)
			+ srcColor1 + srcColor3 * (1.0 - srcColor1.w)
			+ srcColor4 + srcColor6 * (1.0 - srcColor4.w)
			+ srcColor5 + srcColor7 * (1.0 - srcColor5.w);
	}
	else if(cubeMapDirection == 3)
	{
		// -Y
		outColor =
			srcColor2 + srcColor0 * (1.0 - srcColor2.w)
			+ srcColor3 + srcColor1 * (1.0 - srcColor3.w)
			+ srcColor6 + srcColor4 * (1.0 - srcColor6.w)
			+ srcColor7 + srcColor5 * (1.0 - srcColor7.w);
	}
	else if(cubeMapDirection == 4)
	{
		// +Z
		outColor =
			srcColor0 + srcColor4 * (1.0 - srcColor0.w)
			+ srcColor1 + srcColor5 * (1.0 - srcColor1.w)
			+ srcColor2 + srcColor6 * (1.0 - srcColor2.w)
			+ srcColor3 + srcColor7 * (1.0 - srcColor3.w);
	}
	else if(cubeMapDirection == 5)
	{
		// -Z
		outColor =
			srcColor4 + srcColor0 * (1.0 - srcColor4.w)
			+ srcColor5 + srcColor1 * (1.0 - srcColor5.w)
			+ srcColor6 + srcColor2 * (1.0 - srcColor6.w)
			+ srcColor7 + srcColor3 * (1.0 - srcColor7.w);
	}
		
	outColor *= 0.25f;
	
	dstMip[dstPos] = outColor;
}