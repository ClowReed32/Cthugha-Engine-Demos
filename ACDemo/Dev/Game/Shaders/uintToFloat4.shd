[Compute shader]

float3 voxelGridDimensions;

RWTexture3D<float4> dstMip[6];
Texture3D<uint> srcTex;

float4 convRGBA8Tofloat4(uint val)
{
	return float4( float((val&0x000000FF)), float((val&0x0000FF00)>>8U), float((val&0x00FF0000)>>16U), float((val&0xFF000000)>>24U) );
}

[numthreads(16, 8, 1)]

void main( uint3 Gid : SV_GroupID, uint3 DTid : SV_DispatchThreadID, uint3 GTid : SV_GroupThreadID, uint GI : SV_GroupIndex )
{
	int3 dimensions;
	dstMip[0].GetDimensions(dimensions.x, dimensions.y, dimensions.z);

	dstMip[0][DTid] = convRGBA8Tofloat4( srcTex.Load(int4(DTid, 0)) ) * 0.0039215686f;
	dstMip[1][DTid] = convRGBA8Tofloat4( srcTex.Load(int4(DTid.x, DTid.y, dimensions.z + DTid.z, 0)) ) * 0.0039215686f;
	dstMip[2][DTid] = convRGBA8Tofloat4( srcTex.Load(int4(DTid.x, DTid.y, 2*dimensions.z + DTid.z, 0)) ) * 0.0039215686f;
	dstMip[3][DTid] = convRGBA8Tofloat4( srcTex.Load(int4(DTid.x, DTid.y, 3*dimensions.z + DTid.z, 0)) ) * 0.0039215686f;
	dstMip[4][DTid] = convRGBA8Tofloat4( srcTex.Load(int4(DTid.x, DTid.y, 4*dimensions.z + DTid.z, 0)) ) * 0.0039215686f;
	dstMip[5][DTid] = convRGBA8Tofloat4( srcTex.Load(int4(DTid.x, DTid.y, 5*dimensions.z + DTid.z, 0)) ) * 0.0039215686f;
}