/////////////////////////////////////////////////////////////////////////////////
//																			   //
//		PHYSIC SHAPE DEBUG													   //
//																			   //
/////////////////////////////////////////////////////////////////////////////////

// Input data
struct VsIn 
{
	float3 vertexPosition_modelspace : Position;
	float4 color 					 : Color;
};

// Output data
struct PsIn 
{
	float4 vertexPosition_screenspace : SV_Position;
	float4 color					 : Color0;
};

[Vertex shader]

//Uniform Matrix
float4x4 View;
float4x4 Proj;

PsIn main(VsIn In)
{
	PsIn output;
	
	output.vertexPosition_screenspace = mul(mul(float4(In.vertexPosition_modelspace, 1.0f), View), Proj);
	output.color = In.color;
	
	return output;
 }

[Fragment shader]

float4 main(PsIn In) : SV_Target
{
	return In.color;
}